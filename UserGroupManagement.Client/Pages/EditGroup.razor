@page "/edit-group/{Id:int}"
@using UserGroupManagement.Client.Services
@using UserGroupManagement.Common.DTOs
@inject IGroupApiService groupApiService;
@inject NavigationManager navigationManager;

<h3>Edit Group</h3>

<EditForm>
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <lable>Name:</lable>
        <InputText class="form-control" @bind-Value="group.GroupName" />
    </div>

    <div class="mb-3">
        <label>Members:</label>
        <select multiple class="form-control" @bind="@userIds">
            @foreach(var user in users)
            {
                <option value="@user.Id">@user.FirstName @user.LastName</option>
            }
        </select>
    </div>
</EditForm>

@code {
    [Parameter]
    public int Id { get; set; }

    private GroupDto group = new();
    private List<UserDto> users = new();
    private List<int> userIds = new();

    [Inject]
    public IUserApiService UserApiService { get; set; } = default;

    protected override async Task OnInitializedAsync()
    {
        //return base.OnInitializedAsync();

        users = await UserApiService.GetAllUsersAsync();

        var existing = await groupApiService.GetGroupByIdAsync(Id);
        if (existing != null){
            group = existing;
            userIds = group.Members.Select(prop => prop.Id).ToList();
        }
    }

    private async Task HandleValidSubmit()
    {
        group.Members = users.Where(p => userIds.Contains(p.Id)).ToList();

        await groupApiService.UpdateGroupAsync(group);
        navigationManager.NavigateTo("/groups");
    }
}
